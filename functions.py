import json
import random
from server import bot
import telebot
import csv
import time





# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –ø—É–Ω–∫—Ç–∞
active_function = {
    "game_cities" : False,  # –ò–≥—Ä–∞ –ì–æ—Ä–æ–¥–∞
    "game_secret": False,   # –ó–∞–≥–∞–¥–∫–∏
    "game_words": False,    # –°–æ—Å—Ç–∞–≤–∏—Ç—å —Å–ª–æ–≤–∞
    "movie_year": False,    # –§–∏–ª—å–º –ø–æ –≥–æ–¥—É
    "movie_genre": False,   # –§–∏–ª—å–º –ø–æ –∂–∞–Ω—Ä—É
    "movie_name": False,   # –§–∏–ª—å–º –ø–æ –∏–º–µ–Ω–∏
    "rock_paper_scissors":False, #–ö–∞–º–µ–Ω—å , –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞

}


# –ú–∞—Å—Å–∏–≤ –¥–ª—è –≥–æ—Ä–æ–¥–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –µ—â—ë –Ω–µ –≤—ã–±–∏—Ä–∞–ª–∏—Å—å
cities_list = []

# –ú–∞—Å—Å–∏–≤ –¥–ª—è —Å—ã–≥—Ä–∞–Ω–Ω—ã—Ö –≥–æ—Ä–æ–¥–æ–≤
cities_list_played = []

# –ü–æ—Å–ª–µ–¥–Ω–∏–π –Ω–∞–∑–≤–∞–Ω–Ω—ã–π –≥–æ—Ä–æ–¥
city_last = ''

# –°–ª–æ–≤–∞—Ä—å –∑–∞–≥–∞–¥–æ–∫
secrets_dict = {}

# –¢–µ–∫—É—â–∞—è –∑–∞–≥–∞–¥–∫–∞ —Å –æ—Ç–≤–µ—Ç–æ–º
secret_active = {}

# –°–ª–æ–≤–∞—Ä—å —Å–ª–æ–≤ —Å –ø–æ–¥—Å–ª–æ–≤–∞–º–∏
word = {}

# –¢–µ–∫—É—â–µ–µ –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ
word_active = ''

# –¢–µ–∫—É—â–µ–µ —Å–ª–æ–≤–æ —Å –ø–æ–¥—Å–ª–æ–≤–∞–º–∏
subwords_active = []

rounds = 0












# –ú–µ–Ω—é –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ñ–∏–ª—å–º–æ–≤
def movie_menu(message):
    active_function["movie_name"] = False
    active_function["movie_year"] = False
    active_function["movie_genre"] = False
    movie_list = [['–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é'],
                 ['–ü–æ–∏—Å–∫ –ø–æ –∂–∞–Ω—Ä—É', '–ü–æ–∏—Å–∫ –ø–æ –≥–æ–¥—É'],
                 ['–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é']]
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    for game in movie_list:
        markup.add(*game)
    bot.send_message(chat_id=message.chat.id,
                     text='‚ùì–ö–∞–∫–æ–π –ø–æ–∏—Å–∫ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç‚ùì\n',
                     reply_markup=markup)





# –ü–æ–∏—Å–∫ —Ñ–∏–ª—å–º–∞ –ø–æ –≥–æ–¥—É
def movie_year(message):
    if message.text == '–ó–∞–∫–æ–Ω—á–∏—Ç—å' or message.text == '–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        movie_menu(message)
        return

    with open("movies.json", encoding='utf-8') as file:
        data = json.load(file) # –ß–∏—Ç–∞–µ–º –≤–µ—Å—å —Ñ–∞–π–ª —Å —Ñ–∏–ª—å–º–∞–º–∏

    count_search = 0
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add('–ó–∞–∫–æ–Ω—á–∏—Ç—å')
    for i in range(len(data)):
        genre_arr = ''
        # –ï—Å–ª–∏ –≤–≤–µ–¥–µ–Ω–Ω—ã–π –≥–æ–¥ —Ä–∞–≤–µ–Ω –≥–æ–¥—É –≤ —Ñ–∞–π–ª–µ
        if message.text.lower() in data[i]["year"]:

            count_search += 1

            for j in range(len(data[i]["genre"])):
                genre_arr += data[i]["genre"][j] + '\t'
                time.sleep(1.21)
                answer = f'–†–µ–∫–æ–º–µ–Ω–¥—É—é –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—ÉüîΩ\n'\
                         f'–ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞: {data[i]["name"]} \n' \
                         f'–ñ–∞–Ω—Ä—ã —Ñ–∏–ª—å–º–∞: {genre_arr} \n'\
                f'–ì–æ–¥ —Ñ–∏–ª—å–º–∞: {data[i]["year"]}\n' \

                bot.send_message(chat_id=message.chat.id, text=answer, reply_markup=markup)

        if count_search == 0:
            answer = f'üö´ –§–∏–ª—å–º–æ–≤ —Å —Ç–∞–∫–∏–º –≥–æ–¥–æ–º –Ω–µ—Ç –≤ –º–æ–µ–π –±–∞–∑–µüö´ \n' \
                     f'–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ, –∫–æ–≥–¥–∞ —è –æ–±–Ω–æ–≤–ª—é –±–∞–∑—É.'
            bot.send_message(chat_id=message.chat.id,
                             text=answer + '\n',
                             reply_markup=markup)

# –ü–æ–∏—Å–∫ —Ñ–∏–ª—å–º–∞ –ø–æ –∏–º–µ–Ω–∏
def movie_name(message):
    if message.text == '–ó–∞–∫–æ–Ω—á–∏—Ç—å' or message.text == '–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        movie_menu(message)
        return
    time.sleep(0.09)
    with open("movies.json", encoding='utf-8') as file:
        data = json.load(file)

    count_search = 0
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add('–ó–∞–∫–æ–Ω—á–∏—Ç—å')
    for i in range(len(data)):
        genre_arr = ''
        if message.text.lower() in data[i]["name"].lower():
            count_search += 1



            for j in range(len(data[i]["genre"])):
                genre_arr += data[i]["genre"][j] + '\t'
                time.sleep(1.2)
            answer = f'–†–µ–∫–æ–º–µ–Ω—É—é –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—ÉüîΩ\n' \
                     f'–ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞: {data[i]["name"]} \n' \
                     f'–ñ–∞–Ω—Ä—ã —Ñ–∏–ª—å–º–∞: {genre_arr} \n', \
                     f'–ì–æ–¥ —Ñ–∏–ª—å–º–∞: {data[i]["year"]}\n'
            bot.send_message(chat_id=message.chat.id, text=answer, reply_markup=markup)





    if count_search == 0:
        answer = f'üö´–§–∏–ª—å–º–æ–≤ —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º –Ω–µ—Ç –≤ –º–æ–µ–π –±–∞–∑–µüö´ \n' \
                 f'–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ, –∫–æ–≥–¥–∞ —è –æ–±–Ω–æ–≤–ª—é –±–∞–∑—É.'
        bot.send_message(chat_id=message.chat.id,
                         text=answer,
                         reply_markup=markup)

# –ü–æ–∏—Å–∫ —Ñ–∏–ª—å–º–∞ –ø–æ –∂–∞–Ω—Ä—É
def movie_genre(message):
    if message.text == '–ó–∞–∫–æ–Ω—á–∏—Ç—å' or message.text == '–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        movie_menu(message)
        return

    with open("movies.json", encoding='utf-8') as file:
        data = json.load(file)

    count_search = 0
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add('–ó–∞–∫–æ–Ω—á–∏—Ç—å')
    for i in range(len(data)+0):
        genre_arr = data[i]["genre"]
        for genre in genre_arr:
            if message.text.lower() in genre.lower():
                count_search += 1

                time.sleep(1.21)

                answer = f'–†–µ–∫–æ–º–µ–Ω–¥—É—é –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—É üîΩ\n' \
                         f'–ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞: {data[i]["name"]} \n' \
                         f'–ì–æ–¥ —Ñ–∏–ª—å–º–∞: {data[i]["year"]}\n'
                f':–ñ–∞–Ω—Ä —Ñ–∏–ª—å–º–∞ {data[i]["genre"]}\n'\

                bot.send_message(chat_id=message.chat.id, text=answer + '\t'
                                 , reply_markup=markup)


    if count_search == 0:
        answer = f'üö´ –§–∏–ª—å–º–æ–≤ —Å —Ç–∞–∫–∏–º –∂–∞–Ω—Ä–æ–º –Ω–µ—Ç –≤ –º–æ–µ–π –±–∞–∑–µüö´  \n' \
                 f'–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ, –∫–æ–≥–¥–∞ —è –æ–±–Ω–æ–≤–ª—é –±–∞–∑—É '
        bot.send_message(chat_id=message.chat.id,
                         text=answer,
                         reply_markup=markup)

# –ú–µ–Ω—é –¥–ª—è –≤—ã–±–æ—Ä–∞ –∏–≥—Ä—ã
def game_menu(message):
    active_function["game_words"] = False
    active_function["game_secret"] = False
    active_function["game_cities"] = False
    game_list = [['–ì–æ—Ä–æ–¥–∞'], ['–ó–∞–≥–∞–¥–∫–∏'],
                 ['–ù–∞–π–¥–∏ —Å–ª–æ–≤–∞'],['–ö–∞–º–µ–Ω—å,–Ω–æ–∂–Ω–∏—Ü—ã,–±—É–º–∞–≥–∞'],
                 ['–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é']]
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    for game in game_list:
        markup.add(*game)
    bot.send_message(chat_id=message.chat.id,
                     text='–ñ–¥—É —Ç–≤–æ–µ–≥–æ —Ä–µ—à–µ–Ω–∏—èüòä\n',
                     reply_markup=markup)





# –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –≥–æ—Ä–æ–¥–æ–≤
def set_cities():
    with open("city.csv", encoding='utf-8') as r_file:
        file_reader = csv.reader(r_file, delimiter=";")
        for row in file_reader:
            cities_list.append(row[3])



# –ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã "–ì–æ—Ä–æ–¥–∞"
def help_cities(message):
    global cities_list, cities_list_played
    cities_list.clear()
    cities_list_played.clear()
    set_cities()
    answer = f'üèô –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤ –∏–≥—Ä–µ "–ì–æ—Ä–æ–¥–∞ üèô" \n' \
             f'–î–∞–≤–∞–π –¥–ª—è –Ω–∞—á–∞–ª–∞ –≤—Å–ø–æ–º–Ω–∏–º –ø—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã: \n' \
             f'–ù—É–∂–Ω–æ –Ω–∞–∑—ã–≤–∞—Ç—å –≥–æ—Ä–æ–¥–∞ –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –±—É–∫–≤—É \n' \
             f'–ï—Å–ª–∏ –ø–æ—Å–ª–µ–¥–Ω—è—è –±—É–∫–≤—ã –´ –∏–ª–∏ –ô, —Ç–æ –Ω–∞–∑—ã–≤–∞–µ–º –Ω–∞ –ø—Ä–µ–¥–ø–æ—Å–ª–µ–¥–Ω—é—é \n' \
             f'–ù–∞–ø—Ä–∏–º–µ—Ä: –ú–æ—Å–∫–≤–∞ (–ø–æ—Å–ª–µ–¥–Ω—è—è –±—É–∫–≤–∞ –ê), –∑–Ω–∞—á–∏—Ç —Å–ª–µ–¥—É—é—â–∏–º –º–æ–∂–µ—Ç –±—ã—Ç—å –ê—Å—Ç—Ä–∞—Ö–∞–Ω—å \n' \
             f'–ü–æ–ø—Ä–æ–±—É–µ–º —Å—ã–≥—Ä–∞—Ç—å? üòä\n'
    markup = telebot.types.InlineKeyboardMarkup(row_width=2)
    answer_yes = telebot.types.InlineKeyboardButton(text='–î–∞ ‚úî', callback_data='cities_yes')
    answer_no = telebot.types.InlineKeyboardButton(text='–ù–µ—Ç ‚úñ', callback_data='cities_no')
    markup.add(answer_yes, answer_no)
    bot.send_message(chat_id=message.chat.id,
                     text=answer,
                     reply_markup=markup)

# –ü—Ä–æ—Ü–µ—Å—Å –∏–≥—Ä—ã –≤ –≥–æ—Ä–æ–¥–∞
def play_cities(message):
    global city_last, cities_list
    message.text = message.text.strip()
    if message.text.lower() in cities_list:
        markup = telebot.types.InlineKeyboardMarkup(row_width=2)
        game_end = telebot.types.InlineKeyboardButton(text='–ó–∞–∫–æ–Ω—á–∏—Ç—å ‚ùå', callback_data='cities_no')
        last_char = telebot.types.InlineKeyboardButton(text='–ù–∞ –∫–∞–∫—É—é –±—É–∫–≤—É ‚ùì', callback_data='last_char')
        markup.add(last_char, game_end)
        cities_list.remove(message.text)
        check_last_city = False  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥—ë–Ω–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞
        check_played_city = False  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ä–∞–Ω–µ–µ —Å—ã–≥—Ä–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ

        if city_last == '':
            check_last_city = True
        elif message.text[0].lower() == city_last[-1]:# –ü–æ–∏—Å–∫ —Å–ª–æ–≤–∞ –ø–æ –ø—Å–æ–ª–µ–¥–Ω–µ–π –±—É–∫–≤–µ —Ä–∞–Ω–µ –≤–µ–¥—ë–Ω–Ω–æ–≥–æ —Å–ª–æ–≤–∞ –∏–≥—Ä–æ–∫–æ–º.
            check_last_city = True

        if message.text.lower() not in cities_list_played:
            check_played_city = True

        if message.text[-1] == '—å' or message.text[-1] == '—ã' or message.text[-1] == '–π':
            message.text = message.text[:-1]

        if message.text.lower() not in cities_list_played and check_last_city and check_played_city:
            cities_list_played.append(message.text)  # –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–Ω—ã–π –≥–æ—Ä–æ–¥ –≤ –º–∞—Å—Å–∏–≤ —Å—ã–≥—Ä–∞–Ω–Ω—ã—Ö –≥–æ—Ä–æ–¥–æ–≤
            for city in cities_list:
                if city[0].lower() == message.text[-1]: # –ï—Å–ª–∏ –ø–µ—Ä–≤–∞—è –±—É–∫–≤–∞ –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞ —Ä–∞–≤–Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ
                    answer = city # –û—Ç–≤–µ—Ç –±–æ—Ç–∞ - –Ω–∞–π–¥–µ–Ω–Ω—ã–π –≥–æ—Ä–æ–¥
                    cities_list_played.append(city) # –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–Ω—ã–π –≥–æ—Ä–æ–¥ –≤ –º–∞—Å—Å–∏–≤ —Å—ã–≥—Ä–∞–Ω–Ω—ã—Ö –≥–æ—Ä–æ–¥–æ–≤
                    cities_list.remove(city) # –£–¥–∞–ª—è–µ–º –∏–∑ –º–∞—Å—Å–∏–≤–∞ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –≥–æ—Ä–æ–¥–æ–≤
                    if city[-1] == '—å' or city[-1] == '—ã' or city[-1] == '–π':
                        city_last = city[:-1] # –ü–æ—Å–ª–µ–¥–Ω–∏–π –≥–æ—Ä–æ–¥ —Ä–∞–≤–µ–Ω –æ—Ç–≤–µ—Ç—É –±–æ—Ç–∞
                    else:
                        city_last = city
                    bot.send_message(chat_id=message.chat.id,
                                     text=answer,
                                     reply_markup=markup)
                    break
        else:
            answer = f'–¢–∞–∫–æ–π –≥–æ—Ä–æ–¥ —É–∂–µ –Ω–∞–∑—ã–≤–∞–ª–∏ üîá'
            bot.send_message(chat_id=message.chat.id,
                             text=answer,
                             reply_markup=markup)
    else:
        answer = f'üö´–¢–∞–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Çüö´ \n' \
                 f'–ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑'
        bot.send_message(chat_id=message.chat.id,
                         text=answer)
        raise

# –ù–∞–ø–æ–ª–Ω—è–µ–º —Å–ª–æ–≤–∞—Ä—å –∑–∞–≥–∞–¥–æ–∫
def set_secrets():
    with open("secret.csv", encoding='utf-8') as r_file:
        file_reader = csv.reader(r_file, delimiter=";")
        for row in file_reader:
            row[0] = row[0].replace(r'\n', '\n')
            secrets_dict[row[0]] = row[1]

# –ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã "–ó–∞–≥–∞–¥–∫–∏"
def help_secret(message):
    global secrets_dict, secret_active
    secrets_dict.clear()
    secret_active.clear()
    set_secrets()
    answer = f'üëãüèª –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤ –º–æ–µ–π –∏–≥—Ä–µ "–ó–∞–≥–∞–¥–∫–∏ üëãüèª" \n' \
             f'–ü—Ä–∞–≤–∏–ª–∞ –æ—á–µ–Ω—å –ø—Ä–æ—Å—Ç—ã–µ \n' \
             f'–Ø –∑–∞–¥–∞—é —Ç–µ–±–µ –∑–∞–≥–∞–¥–∫—É, –∞ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –ø—Ä–µ–¥–ª–∞–≥–∞—Ç—å –æ—Ç–≤–µ—Ç—ã \n' \
             f' –°—ã–≥—Ä–∞–µ–º?üòä'
    markup = telebot.types.InlineKeyboardMarkup(row_width=2)
    secret_start = telebot.types.InlineKeyboardButton(text='–ù–∞—á–∞—Ç—å –∏–≥—Ä—É ‚úî', callback_data='secret_yes')
    secret_stop = telebot.types.InlineKeyboardButton(text='–ó–∞–∫–æ–Ω—á–∏—Ç—å –∏–≥—Ä—É ‚úñ', callback_data='secret_no')
    markup.add(secret_start, secret_stop)
    bot.send_message(chat_id=message.chat.id,
                     text=answer,
                     reply_markup=markup)

# –ó–∞–≥–∞–¥—ã–≤–∞–µ–º –∑–∞–≥–∞–¥–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
def send_secret(message):
    secret_active.clear() # –û—á–∏—â–∞–µ–º —Å–ª–æ–≤–∞—Ä—å —Ç–µ–∫—É—â–µ–π –∑–∞–≥–∞–¥–∫–∏
    if len(secrets_dict) != 0:
        secret_sends, answer_secret = random.choice(list(secrets_dict.items())) # –í—ã–±–∏—Ä–∞–µ–º —Ä–∞–Ω–¥–æ–º–Ω—É—é –∑–∞–≥–∞–¥–∫—É
        secrets_dict.pop(secret_sends) # –£–¥–∞–ª—è–µ–º –∑–∞–≥–∞–¥–∫—É –∏–∑ —Å–ª–æ–≤–∞—Ä—è –∑–∞–≥–∞–¥–æ–∫
        secret_active[secret_sends] = answer_secret # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â—É—é –∑–∞–≥–∞–¥–∫—É –∏ –æ—Ç–≤–µ—Ç –Ω–∞ –Ω–µ—ë
        bot.send_message(chat_id=message.chat.id,
                         text=f'<b>‚ùì–í–æ—Ç –º–æ—è –∑–∞–≥–∞–¥–∫–∞:</b> \n'
                              f'{secret_sends}',
                         parse_mode='html')
    else:# –í–∞—Ä–∏–∞–Ω—Ç , –µ—Å–ª–∏ –∑–∞–≥–∞–¥–∫–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å.(–†–µ–¥–∫–æ—Å—Ç—å)
        answer = '–£ –º–µ–Ω—è –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –∑–∞–≥–∞–¥–∫–∏ \n' \
                 '–î–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ üòä'
        bot.send_message(chat_id=message.chat.id,
                         text=answer)
        game_menu(message)

# –ü—Ä–æ—Ü–µ—Å—Å –∏–≥—Ä—ã –≤ –ó–∞–≥–∞–¥–∫–∏
def play_secret(message):
    sec = secret_active.keys()
    answer_secret = ''
    for i in sec:
        answer_secret = secret_active.get(i)
        answer_secret = answer_secret.lower()
    if message.text.strip().lower() == answer_secret:
        markup = telebot.types.InlineKeyboardMarkup(row_width=2.02)
        secret_next = telebot.types.InlineKeyboardButton(text='–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å‚úî', callback_data='secret_yes')
        secret_stop = telebot.types.InlineKeyboardButton(text='–ó–∞–∫–æ–Ω—á–∏—Ç—å‚úñ', callback_data='secret_no')
        markup.add(secret_next, secret_stop)
        bot.send_message(chat_id=message.chat.id,
                         text='–ú–æ–ª–æ–¥–µ—Ü!',
                         reply_markup=markup)
    else:
        markup = telebot.types.InlineKeyboardMarkup(row_width=2.02)
        secret_answer = telebot.types.InlineKeyboardButton(text='–û—Ç–≤–µ—Ç‚úî', callback_data='secret_answer')
        secret_stop = telebot.types.InlineKeyboardButton(text='–ó–∞–∫–æ–Ω—á–∏—Ç—å‚úñ', callback_data='secret_no')
        markup.add(secret_answer, secret_stop)
        bot.send_message(chat_id=message.chat.id,
                         text='–ù–µ–≤–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç!‚úñ \n'
                              '–ü–æ–¥—É–º–∞–π –µ—â—ë',
                         reply_markup=markup)
# –ù–∞–ø–æ–ª–Ω—è–µ–º –º–∞—Å—Å–∏–≤—ã —Å–ª–æ–≤–∞–º–∏
def set_word():
    global word, word_active
    with open("words.json", encoding='utf-8') as file:
        data = json.load(file) # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª

    for i in range(len(data)):
        word[data[i]["word"]] = data[i]["subwords"] # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ —Å–ª–æ–≤–∞—Ä—å

# –ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã "–ù–∞–π–¥–∏ —Å–ª–æ–≤–∞"
def help_words(message):
    global word, subwords_active
    word.clear() # –û—á–∏—â–∞–µ–º —Å–ª–æ–≤–∞—Ä—å –≤—Å–µ—Ö —Å–ª–æ–≤
    subwords_active.clear() # –û—á–∏—â–∞–µ–º –º–∞—Å—Å–∏–≤ –≤—Å–µ—Ö –ø–æ–¥—Å–ª–æ–≤ –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–≥–æ —Å–ª–æ–≤–∞
    set_word() # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª –∏ –∑–∞–ø–æ–ª–Ω—è–µ–º —Å–ª–æ–≤–∞—Ä–∏
    answer = f'üëãüèª –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤ –º–æ–µ–π –∏–≥—Ä–µ "–ù–∞–π–¥–∏ —Å–ª–æ–≤–∞ üëãüèª" \n' \
             f'–ü—Ä–∞–≤–∏–ª–∞ –æ—á–µ–Ω—å –ø—Ä–æ—Å—Ç—ã–µ \n' \
             f'–Ø –∑–∞–¥–∞—é —Ç–µ–±–µ —Å–ª–æ–≤–æ, \n' \
             f'–ê —Ç–µ–±–µ –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏ –≤—Å–µ —Å–ª–æ–≤–∞, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –∏–∑ –Ω–µ–≥–æ —Å–æ—Å—Ç–∞–≤–∏—Ç—å \n' \
             f'–£–¥–∞—á–∏!'
    markup = telebot.types.InlineKeyboardMarkup(row_width=2.02)
    word_start = telebot.types.InlineKeyboardButton(text='–ù–∞—á–∞—Ç—å‚úî', callback_data='word_yes')
    word_stop = telebot.types.InlineKeyboardButton(text='–ó–∞–∫–æ–Ω—á–∏—Ç—å‚úñ', callback_data='word_no')
    markup.add(word_start, word_stop)
    bot.send_message(chat_id=message.chat.id,text=answer,reply_markup=markup)

# –ó–∞–≥–∞–¥—ã–≤–∞–µ–º —Å–ª–æ–≤–æ
def send_word(message):
    global word_active, subwords_active
    word_active = '' # –û—á–∏—â–∞–µ–º –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ
    subwords_active.clear()  # –û—á–∏—â–∞–µ–º —Å–ª–æ–≤–∞—Ä—å —Ç–µ–∫—É—â–∏—Ö –ø–æ–¥—Å–ª–æ–≤
    if len(word) != 0: # –ï—Å–ª–∏ –µ—â—ë –Ω–µ –≤—Å–µ —Å–ª–æ–≤–∞ –±—ã–ª–∏ —Å—ã–≥—Ä–∞–Ω—ã
        word_active, subwords_active = random.choice(list(word.items()))  # –í—ã–±–∏—Ä–∞–µ–º —Ä–∞–Ω–¥–æ–º–Ω–æ–µ —Å–ª–æ–≤–æ
        word.pop(word_active)  # –£–¥–∞–ª—è–µ–º —Å–ª–æ–≤–æ –∏–∑ —Å–ª–æ–≤–∞—Ä—è
        bot.send_message(chat_id=message.chat.id,
                         text=f'<b>–Ø –∑–∞–≥–∞–¥—ã–≤–∞—é —Å–ª–æ–≤–æ:</b> \n'
                              f'{word_active} \n'
                              f'–¢–µ–±–µ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –Ω–∞–∑–≤–∞—Ç—å: {len(subwords_active)} —Å–ª–æ–≤',
                         parse_mode='html')
    else:
        answer = '–£ –º–µ–Ω—è –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å —Å–ª–æ–≤–∞ \n' \
                 '–î–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ :)'

        bot.send_message(chat_id=message.chat.id+ '\a',
                         text=answer)
        game_menu(message) # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –∏–≥—Ä–æ–≤–æ–µ –º–µ–Ω—é

# –ü—Ä–æ—Ü–µ—Å—Å –∏–≥—Ä—ã –≤ "–ù–∞–π–¥–∏ —Å–ª–æ–≤–∞"
def play_word(message):
    global subwords_active
    if message.text.strip().lower() in subwords_active and len(subwords_active) == 1:
        subwords_active.remove(message.text.strip().lower())
        markup = telebot.types.InlineKeyboardMarkup(row_width=2.02)
        word_cont = telebot.types.InlineKeyboardButton(text='–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å', callback_data='word_yes')
        word_stop = telebot.types.InlineKeyboardButton(text='–ó–∞–∫–æ–Ω—á–∏—Ç—å', callback_data='word_no')
        markup.add(word_cont, word_stop)
        answer = f'–¢—ã –æ—Ç–≥–∞–¥–∞–ª –≤—Å–µ —Å–ª–æ–≤–∞, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ —Å–æ—Å—Ç–∞–≤–∏—Ç—å –∏–∑ —Å–ª–æ–≤–∞ {word_active} \n' \
                 f'–•–æ—á–µ—à—å –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å?'

        bot.send_message(chat_id=message.chat.id,
                         text=answer,
                         reply_markup=markup)

    elif message.text.strip().lower() in subwords_active and len(subwords_active) > 1:
        subwords_active.remove(message.text.strip().lower())
        markup = telebot.types.InlineKeyboardMarkup(row_width=1)
        word_help_user = telebot.types.InlineKeyboardButton(text='–ü–æ–¥—Å–∫–∞–∑–∫–∞', callback_data='word_help')
        markup.add(word_help_user)
        answer = f'–¢–∞–∫–æ–µ —Å–ª–æ–≤–æ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç \n' \
                 f'–û—Å—Ç–∞–ª–æ—Å—å —É–≥–∞–¥–∞—Ç—å: {int(len(subwords_active))} —Å–ª–æ–≤\n'
        bot.send_message(chat_id=message.chat.id,
                         text=answer,
                         reply_markup=markup)

    elif message.text.strip().lower() not in str(subwords_active):
        markup = telebot.types.InlineKeyboardMarkup(row_width=1)
        word_help_user = telebot.types.InlineKeyboardButton(text='–ü–æ–¥—Å–∫–∞–∑–∫–∞', callback_data='word_help')
        markup.add(word_help_user)
        answer = f'–¢–∞–∫–æ–≥–æ —Å–ª–æ–≤–∞ –Ω–µ—Ç \n' \
                 f'–ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑'

        bot.send_message(
            chat_id=message.chat.id,
                         text=answer,
                         reply_markup=markup)



@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    # –ò–≥—Ä–∞–µ–º –≤ –≥–æ—Ä–æ–¥–∞
    if call.data == 'cities_yes':
        bot.delete_message(chat_id=call.message.chat.id,
                           message_id=call.message.id)
        bot.send_message(chat_id=call.message.chat.id,
                         text='–ñ–¥—É –æ—Ç —Ç–µ–±—è –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –≥–æ—Ä–æ–¥–∞!')


        active_function["game_cities"] = True

    # –ù–∞ –∫–∞–∫—É—é –±—É–∫–≤—É –Ω–∞–∑—ã–≤–∞–µ–º –≥–æ—Ä–æ–¥
    elif call.data == 'last_char':
        bot.send_message(chat_id=call.message.chat.id,text=f'{city_last[-1].upper().lower()}\n')

    # –û—Ç–∫–∞–∑—ã–≤–∞–µ–º—Å—è –∏–≥—Ä–∞—Ç—å –≤ –≥–æ—Ä–æ–¥–∞
    elif call.data == 'cities_no':
        bot.delete_message(chat_id=call.message.chat.id,
                           message_id=call.message.id)
        bot.send_message(chat_id=call.message.chat.id,
                         text='–ë—É–¥—É –∂–¥–∞—Ç—å —Å–ª–µ–¥—É—é—â–µ–π –∏–≥—Ä—ã!')

        games(call.message)
        active_function["game_cities"] = False

    # –ò–≥—Ä–∞–µ–º –≤ –∑–∞–≥–∞–¥–∫–∏
    elif call.data == 'secret_yes':
        bot.delete_message(chat_id=call.message.chat.id,
                           message_id=call.message.id)
        active_function["game_secret"] = True
        send_secret(call.message)

    # –ü–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –Ω–∞ –∑–∞–≥–∞–¥–∫—É
    elif call.data == 'secret_answer':
        bot.delete_message(chat_id=call.message.chat.id,
                           message_id=call.message.id)
        sec = secret_active.keys()
        answer = ''
        for i in sec:
            answer = secret_active.get(i)
        bot.send_message(chat_id=call.message.chat.id,
                         text=f'–û—Ç–≤–µ—Ç: {answer} \n'
                              f'–ó–∞–ø–æ–º–Ω–∏ –æ—Ç–≤–µ—Ç –Ω–∞ –∑–∞–≥–∞–¥–∫—É!')

        send_secret(call.message)

    # –ó–∞–∫–∞–Ω—á–∏–≤–∞–µ–º –∏–≥—Ä–∞—Ç—å –≤ –∑–∞–≥–∞–¥–∫–∏
    elif call.data == 'secret_no':
        bot.delete_message(chat_id=call.message.chat.id,
                           message_id=call.message.id)
        bot.send_message(chat_id=call.message.chat.id,
                         text='–ë—É–¥—É –∂–¥–∞—Ç—å —Å–ª–µ–¥—É—é—â–µ–π –∏–≥—Ä—ã!üòå')

        games(call.message)
        active_function["game_secret"] = False

    # –ò–≥—Ä–∞–µ–º –≤ "–ù–∞–π–¥–∏ —Å–ª–æ–≤–∞"
    elif call.data == 'word_yes':
        bot.delete_message(chat_id=call.message.chat.id,
                           message_id=call.message.id)
        active_function["game_words"] = True
        send_word(call.message)

    # –ü–æ–º–æ—â—å –≤ "–ù–∞–π–¥–∏ —Å–ª–æ–≤–∞"
    elif call.data == 'word_help':
        if len(subwords_active) != 1:
            random_index = random.randrange(len(subwords_active))
            answer = subwords_active[random_index]
            subwords_active.remove(answer)
            bot.send_message(chat_id=call.message.chat.id,
                             text=f'–ï—Å—Ç—å —Ç–∞–∫–æ–µ —Å–ª–æ–≤–æ: {answer} \n'
                                  f'‚ú®–û—Å—Ç–∞–ª–æ—Å—å —Å–ª–æ–≤: {len(subwords_active)} —Å–ª–æ–≤ ‚ú®')

        elif len(subwords_active) == 1:
            random_index = random.randrange(len(subwords_active))
            answer = subwords_active[random_index]
            subwords_active.remove(answer)
            markup = telebot.types.InlineKeyboardMarkup(row_width=2)
            word_cont = telebot.types.InlineKeyboardButton(text='–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å', callback_data='word_yes')
            word_stop = telebot.types.InlineKeyboardButton(text='–ó–∞–∫–æ–Ω—á–∏—Ç—å', callback_data='word_no')
            markup.add(word_cont, word_stop)
            bot.send_message(chat_id=call.message.chat.id,
                             text=f'‚ú®–≠—Ç–æ –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–ª–æ–≤–æ: {answer}\n',
                             reply_markup=markup)


    # –ó–∞–∫–∞–Ω—á–∏–≤–∞–µ–º –∏–≥—Ä–∞—Ç—å –≤ "–ù–∞–π–¥–∏ —Å–ª–æ–≤–∞"
    elif call.data == 'word_no':
        bot.delete_message(chat_id=call.message.chat.id,
                           message_id=call.message.id)
        bot.send_message(chat_id=call.message.chat.id,
                         text='‚ú® –ë—É–¥—É –∂–¥–∞—Ç—å —Å–ª–µ–¥—É—é—â–µ–π –∏–≥—Ä—ã! ‚ú®')
        games(call.message)
        active_function["game_words"] = False

def description(message):
    answer = '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤–∞—Å –≤ –∏–≥—Ä–µ –ö–∞–º–µ–Ω—å –Ω–æ–∂–Ω–∏—Ü—ã –±—É–º–∞–≥–∞!' \
             '–í–´ –∑–∞–≥–∞–¥—ã–≤–∞–µ—Ç–µ –∫–∞–º–µ–Ω—å,–Ω–æ–∂–Ω–∏—Ü—ã –ª–∏–±–æ –±—É–º–∞–≥—É!' \
             '–ò —Ä–æ–±–æ—Ç —Ç–æ–∂–µ –≤—ã–±–∏—Ä–∞–µ—Ç —á—Ç–æ-—Ç–æ –æ–¥–Ω–æ!–ö—Ç–æ –∫–æ–≥–æ –ø–æ–±–∏–ª,—Ç–æ—Ç –ø–æ–±–µ–¥–∏–ª!' \
             '–ü–æ–ø—Ä–æ–±—É–µ–º —Å—ã–≥—Ä–∞—Ç—å?'
    bot.send_message(chat_id=message.chat.id,text=answer)
    markup = telebot.types.InlineKeyboardMarkup(row_width=2)
    button2 = telebot.types.InlineKeyboardButton(text='–ù–∞—á–∞—Ç—å',callback_data='yes')
    button1 = telebot.types.InlineKeyboardButton(text='–°—Ç–æ–ø', callback_data='no')

    markup.add(button2,button1)
@bot.message_handler(content_types=["text"])
def rock_paper_scissors(message):
    if message.text =='–ù–∞—á–∞—Ç—å':
        bot.send_message(chat_id=message.chat.id, text='–°–∫–æ–ª—å–∫–æ —Ä–∞—É–Ω–¥–æ–≤ —Ç—ã —Ö–æ—á–µ—à—å —Å—ã–≥—Ä–∞—Ç—å?')
        rounds.text = message.text.strip()
        markup = telebot.types.InlineKeyboardMarkup(row_width=2)
        button6 = telebot.types.InlineKeyboardButton(text='–ö–ê–ú–ï–ù–¨', callback_data='–∫')
        button5 = telebot.types.InlineKeyboardButton(text='–ù–û–ñ–ù–ò–¶–´', callback_data='–Ω')
        button4 = telebot.types.InlineKeyboardButton(text="–ë–£–ú–ê–ì–ê", callback_data="–±")
        markup.add(button6, button4, button5)
        while str(rounds) != '0':
            bot.send_message(chat_id=message.chat.id, text='–í—ã–±–∏—Ä–∞–π! –∫–∞–º–µ–Ω—å,–Ω–æ–∂–Ω–∏—Ü—ã –∏–ª–∏ –±—É–º–∞–≥–∞!', reply_markup=markup)

            bot_step = random.randint(0, 3)  # 1 –∫–∞–º–µ–Ω—å 2 –Ω–æ–∂–Ω–∏—Ü—ã 3 –±—É–º–∞–≥–∞
            if message.text == "–ë–£–ú–ê–ì–ê" and bot_step == 3:
                bot.send_message(chat_id=message.chat.id, text='–ù–∏—á—å—è!–ë–æ—Ç —Ç–æ–∂–µ –≤—ã–±—Ä–∞–ª –±—É–º–∞–≥—É!')
            elif message.text == "–ë–£–ú–ê–ì–ê" and bot_step == 2:
                bot.send_message(chat_id=message.chat.id, text='–¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª!–ë–æ—Ç –ø–æ—Ö–æ–¥–∏–ª –±—É–º–∞–≥–æ–π!')
            elif message.text == "–ë–£–ú–ê–ì–ê" and bot_step == 1:
                bot.send_message(chat_id=message.chat.id, text="–¢—ã –ø–æ–±–µ–¥–∏–ª!–ë–æ—Ç –ø–æ—Ö–æ–¥–∏–ª –∫–∞–º–Ω–µ–º!")
            elif message.text == '–ö–ê–ú–ï–ù–¨' and bot_step == 3:
                bot.send_message(chat_id=message.chat.id, text='–¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª!–ë–æ—Ç –ø–æ—Ö–æ–¥–∏–ª –±—É–º–∞–≥–æ–π!')
            elif message.text == '–ö–ê–ú–ï–ù–¨' and bot_step == 1:
                bot.send_message(chat_id=message.chat.id, text="–ù–∏—á—å—è!–ë–æ—Ç —Ç–æ–∂–µ –≤—ã–±—Ä–∞–ª –∫–∞–º–µ–Ω—å!")
            elif message.text == '–ö–ê–ú–ï–ù–¨' and bot_step == 2:
                bot.send_message(chat_id=message.chat.id, text="–¢—ã –ø–æ–±–µ–¥–∏–ª!–ë–æ—Ç –≤—ã–±—Ä–∞–ª –Ω–æ–∂–Ω–∏—Ü—ã!")
            elif message.text == '–ù–û–ñ–ù–ò–¶–´' and bot_step == 3:
                bot.send_message(chat_id=message.chat.id, text='–¢—ã –ø–æ–±–µ–¥–∏–ª!–ë–æ—Ç –ø–æ—Ö–æ–¥–∏–ª –±—É–º–∞–≥–æ–π!')
            elif message.text == '–ù–û–ñ–ù–ò–¶–´' and bot_step == 1:
                bot.send_message(chat_id=message.chat.id, text="–¢–´ –ø—Ä–æ–∏–≥—Ä–∞–ª!–ë–æ—Ç –ø–æ—Ö–æ–¥–∏–ª –∫–∞–º–µ–Ω—å!")
            elif message.text == '–ù–û–ñ–ù–ò–¶–´' and bot_step == 2:
                bot.send_message(chat_id=message.chat.id, text="–¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª!–ë–æ—Ç –≤—ã–±—Ä–∞–ª –Ω–æ–∂–Ω–∏—Ü—ã!")
            telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
            button8 = telebot.types.InlineKeyboardButton(text='–°–¢–û–ü!', callback_data='–Ω')
            button7 = telebot.types.InlineKeyboardButton(text="–ü–†–û–î–û–õ–ñ–ò–¢–¨ –ò–ì–†–£!", callback_data="–±")
            markup.add(button7, button8)
            if message.text == "–ü–†–û–î–û–õ–ñ–ò–¢–¨ –ò–ì–†–£!":
                continue
            else:
                game_menu(message)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=["start"])
def start(message):

    answer = f'{message.from_user.first_name}, –ø—Ä–∏–≤–µ—Ç! üëãüèª \n' \
             f'‚ú® –î–∞–≤–∞–π –Ω–∞—á–Ω—ë–º —Ä–∞–±–æ—Ç—É ‚ú® \n' \
             f'–î–ª—è —ç—Ç–æ–≥–æ –Ω–∞–∂–º–∏ —Å—é–¥–∞ --> /menu'
    bot.send_message(chat_id=message.chat.id, text=answer)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /menu
@bot.message_handler(commands=["menu"])
def menu(message):
    active_function["movie_genre"] = False
    active_function["movie_year"] = False
    active_function["movie_name"] = False
    active_function["game_cities"] = False
    active_function["game_secret"] = False
    active_function["game_words"] = False
    menu_list = [['–ü–æ–∏—Å–∫ —Ñ–∏–ª—å–º–∞'], ['–ò–≥—Ä—ã']]
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    for command in menu_list:
        markup.add(*command)
    bot.send_message(chat_id=message.chat.id,
                     text='–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –ø—É–Ω–∫—Ç',
                     reply_markup=markup)



# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /games
@bot.message_handler(commands=["games"])
def games(message):
    answer = 'üî•–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–≥—Ä–æ–≤–æ–µ –º–µ–Ω—é! üî• \n' \
             '–ò–≥—Ä—ã, –≤ –∫–æ—Ç–æ—Ä—ã–µ –º—ã –º–æ–∂–µ–º —Å—ã–≥—Ä–∞—Ç—å: \n' \
             '1.–ì–æ—Ä–æ–¥–∞‚ú® \n' \
             '2.–ó–∞–≥–∞–¥–∫–∏‚ú®\n' \
             '3.–°–æ—Å—Ç–∞–≤–∏—Ç—å —Å–ª–æ–≤–∞ –∏–∑ —Å–ª–æ–≤–∞‚ú® \n' \
             '4.–ö–∞–º–µ–Ω—å,–Ω–æ–∂–Ω–∏—Ü—ã,–±—É–º–∞–≥–∞‚ú® \n' \
             '–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –≤—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä—É –∏–∑ –º–µ–Ω—é!' \

    bot.send_message(chat_id=message.chat.id,text=answer)
    game_menu(message)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /movies
@bot.message_handler(commands=["movies"])
def movies(message):
    answer = f'üé• –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–µ–Ω—é –ø–æ–∏—Å–∫–∞ —Ñ–∏–ª—å–º–∞! üé•\n' \
             f'‚ú®–Ø —É–º–µ—é –∏—Å–∫–∞—Ç—å —Ñ–∏–ª—å–º –ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º: \n' \
             f'1. –ù–∞–∑–≤–∞–Ω–∏–µ ‚ú®\n' \
             f'2. –ì–æ–¥ ‚ú®\n' \
             f'3. –ñ–∞–Ω—Ä ‚ú®\n' \
             f'–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –≤—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä—É –∏–∑ –º–µ–Ω—é!üîΩ\n'\
             f'–í —Å–ø–∏—Å–æ–∫ —Ñ–∏–ª—å–º–æ–≤ –≤—Ö–æ–¥–∏—Ç—å –ø–æ–¥–±–æ—Ä–∫–∞ —Ñ–∏–ª—å–º–æ–≤ —Å —Å–µ—Ä–≤–∏—Å–∞ "–∫–∏–Ω–æ–ø–æ–∏—Å–∫".–ú—ã –≤—ã–±—Ä–∞–ª–∏ —Å–∞–º—ã–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ñ–∏–ª—å–º—ã –¥–ª—è –≤–∞—Åüòå.\n'
    bot.send_message(chat_id=message.chat.id,text=answer)
    movie_menu(message)






# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ –≤—Å–µ–≥–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Ç–µ–∫—Å—Ç –ë–æ—Ç—É)
@bot.message_handler(content_types=['text'])
def action(message):
    if message.text == '–ò–≥—Ä—ã':
        games(message)

    elif message.text == '–ì–æ—Ä–æ–¥–∞':
        help_cities(message)

    elif message.text == '–ó–∞–≥–∞–¥–∫–∏':
        help_secret(message)

    elif message.text == '–ù–∞–π–¥–∏ —Å–ª–æ–≤–∞':
        help_words(message)

    elif active_function["game_cities"]:
        play_cities(message)

    elif active_function["game_secret"]:
        play_secret(message)

    elif active_function["game_words"]:
        play_word(message)

    elif message.text == '–ü–æ–∏—Å–∫ —Ñ–∏–ª—å–º–∞':
        movies(message)







    elif message.text == '–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é':
        bot.send_message(chat_id=message.chat.id,
                         text='‚ú®–í–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞, –∫–æ—Ç–æ—Ä—ã–π —Ç—ã —Ö–æ—á–µ—à—å –Ω–∞–π—Ç–∏ \n'
                              '–ù–∞–ø—Ä–∏–º–µ—Ä: –ù–∞–∑–∞–¥ –≤ –±—É–¥—É—â–µ–µ‚ú®üîΩ\n')
        active_function["movie_genre"] = False
        active_function["movie_year"] = False
        active_function["movie_name"] = True

    elif message.text == '–ü–æ–∏—Å–∫ –ø–æ –∂–∞–Ω—Ä—É':
        bot.send_message(chat_id=message.chat.id,
                         text='‚ú®–í–≤–µ–¥–∏ –∂–∞–Ω—Ä —Ñ–∏–ª—å–º–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Ç—ã —Ö–æ—á–µ—à—å –Ω–∞–π—Ç–∏ \n'
                              '–ù–∞–ø—Ä–∏–º–µ—Ä: –ú—É–ª—å—Ç—Ñ–∏–ª—å–º‚ú®üîΩ\n')
        active_function["movie_genre"] = True
        active_function["movie_year"] = False
        active_function["movie_name"] = False

    elif message.text == '–ü–æ–∏—Å–∫ –ø–æ –≥–æ–¥—É':
        bot.send_message(chat_id=message.chat.id,
                         text='‚ú®–í–≤–µ–¥–∏ –≥–æ–¥ —Ñ–∏–ª—å–º–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Ç—ã —Ö–æ—á–µ—à—å –Ω–∞–π—Ç–∏ \n'
                              '–ù–∞–ø—Ä–∏–º–µ—Ä: 2020‚ú®üîΩ\n')
        active_function["movie_genre"] = False
        active_function["movie_year"] = True
        active_function["movie_name"] = False

    elif active_function["movie_name"]:
        movie_name(message)

    elif active_function["movie_year"]:
        movie_year(message)

    elif active_function["movie_genre"]:
        movie_genre(message)


    elif message.text == '–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        menu(message)





